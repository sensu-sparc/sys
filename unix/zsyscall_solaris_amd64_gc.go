// go run mksyscall_solaris.go -tags solaris,amd64 syscall_solaris.go syscall_solaris_amd64.go
// Code generated by the command above; see README.md. DO NOT EDIT.

// +build solaris,amd64
// +build !gccgo

package unix

import (
	"unsafe"
)

//go:cgo_import_dynamic libc_pipe pipe "libc.so"
//go:cgo_import_dynamic libc_getsockname getsockname "libsocket.so"
//go:cgo_import_dynamic libc_getcwd getcwd "libc.so"
//go:cgo_import_dynamic libc_getgroups getgroups "libc.so"
//go:cgo_import_dynamic libc_setgroups setgroups "libc.so"
//go:cgo_import_dynamic libc_wait4 wait4 "libc.so"
//go:cgo_import_dynamic libc_gethostname gethostname "libc.so"
//go:cgo_import_dynamic libc_utimes utimes "libc.so"
//go:cgo_import_dynamic libc_utimensat utimensat "libc.so"
//go:cgo_import_dynamic libc_fcntl fcntl "libc.so"
//go:cgo_import_dynamic libc_futimesat futimesat "libc.so"
//go:cgo_import_dynamic libc_accept accept "libsocket.so"
//go:cgo_import_dynamic libc___xnet_recvmsg __xnet_recvmsg "libsocket.so"
//go:cgo_import_dynamic libc___xnet_sendmsg __xnet_sendmsg "libsocket.so"
//go:cgo_import_dynamic libc_acct acct "libc.so"
//go:cgo_import_dynamic libc___makedev __makedev "libc.so"
//go:cgo_import_dynamic libc___major __major "libc.so"
//go:cgo_import_dynamic libc___minor __minor "libc.so"
//go:cgo_import_dynamic libc_ioctl ioctl "libc.so"
//go:cgo_import_dynamic libc_poll poll "libc.so"
//go:cgo_import_dynamic libc_access access "libc.so"
//go:cgo_import_dynamic libc_adjtime adjtime "libc.so"
//go:cgo_import_dynamic libc_chdir chdir "libc.so"
//go:cgo_import_dynamic libc_chmod chmod "libc.so"
//go:cgo_import_dynamic libc_chown chown "libc.so"
//go:cgo_import_dynamic libc_chroot chroot "libc.so"
//go:cgo_import_dynamic libc_close close "libc.so"
//go:cgo_import_dynamic libc_creat creat "libc.so"
//go:cgo_import_dynamic libc_dup dup "libc.so"
//go:cgo_import_dynamic libc_dup2 dup2 "libc.so"
//go:cgo_import_dynamic libc_exit exit "libc.so"
//go:cgo_import_dynamic libc_faccessat faccessat "libc.so"
//go:cgo_import_dynamic libc_fchdir fchdir "libc.so"
//go:cgo_import_dynamic libc_fchmod fchmod "libc.so"
//go:cgo_import_dynamic libc_fchmodat fchmodat "libc.so"
//go:cgo_import_dynamic libc_fchown fchown "libc.so"
//go:cgo_import_dynamic libc_fchownat fchownat "libc.so"
//go:cgo_import_dynamic libc_fdatasync fdatasync "libc.so"
//go:cgo_import_dynamic libc_flock flock "libc.so"
//go:cgo_import_dynamic libc_fpathconf fpathconf "libc.so"
//go:cgo_import_dynamic libc_fstat fstat "libc.so"
//go:cgo_import_dynamic libc_fstatat fstatat "libc.so"
//go:cgo_import_dynamic libc_fstatvfs fstatvfs "libc.so"
//go:cgo_import_dynamic libc_getdents getdents "libc.so"
//go:cgo_import_dynamic libc_getgid getgid "libc.so"
//go:cgo_import_dynamic libc_getpid getpid "libc.so"
//go:cgo_import_dynamic libc_getpgid getpgid "libc.so"
//go:cgo_import_dynamic libc_getpgrp getpgrp "libc.so"
//go:cgo_import_dynamic libc_geteuid geteuid "libc.so"
//go:cgo_import_dynamic libc_getegid getegid "libc.so"
//go:cgo_import_dynamic libc_getppid getppid "libc.so"
//go:cgo_import_dynamic libc_getpriority getpriority "libc.so"
//go:cgo_import_dynamic libc_getrlimit getrlimit "libc.so"
//go:cgo_import_dynamic libc_getrusage getrusage "libc.so"
//go:cgo_import_dynamic libc_gettimeofday gettimeofday "libc.so"
//go:cgo_import_dynamic libc_getuid getuid "libc.so"
//go:cgo_import_dynamic libc_kill kill "libc.so"
//go:cgo_import_dynamic libc_lchown lchown "libc.so"
//go:cgo_import_dynamic libc_link link "libc.so"
//go:cgo_import_dynamic libc___xnet_llisten __xnet_llisten "libsocket.so"
//go:cgo_import_dynamic libc_lstat lstat "libc.so"
//go:cgo_import_dynamic libc_madvise madvise "libc.so"
//go:cgo_import_dynamic libc_mkdir mkdir "libc.so"
//go:cgo_import_dynamic libc_mkdirat mkdirat "libc.so"
//go:cgo_import_dynamic libc_mkfifo mkfifo "libc.so"
//go:cgo_import_dynamic libc_mkfifoat mkfifoat "libc.so"
//go:cgo_import_dynamic libc_mknod mknod "libc.so"
//go:cgo_import_dynamic libc_mknodat mknodat "libc.so"
//go:cgo_import_dynamic libc_mlock mlock "libc.so"
//go:cgo_import_dynamic libc_mlockall mlockall "libc.so"
//go:cgo_import_dynamic libc_mprotect mprotect "libc.so"
//go:cgo_import_dynamic libc_msync msync "libc.so"
//go:cgo_import_dynamic libc_munlock munlock "libc.so"
//go:cgo_import_dynamic libc_munlockall munlockall "libc.so"
//go:cgo_import_dynamic libc_nanosleep nanosleep "libc.so"
//go:cgo_import_dynamic libc_open open "libc.so"
//go:cgo_import_dynamic libc_openat openat "libc.so"
//go:cgo_import_dynamic libc_pathconf pathconf "libc.so"
//go:cgo_import_dynamic libc_pause pause "libc.so"
//go:cgo_import_dynamic libc_pread pread "libc.so"
//go:cgo_import_dynamic libc_pwrite pwrite "libc.so"
//go:cgo_import_dynamic libc_read read "libc.so"
//go:cgo_import_dynamic libc_readlink readlink "libc.so"
//go:cgo_import_dynamic libc_rename rename "libc.so"
//go:cgo_import_dynamic libc_renameat renameat "libc.so"
//go:cgo_import_dynamic libc_rmdir rmdir "libc.so"
//go:cgo_import_dynamic libc_lseek lseek "libc.so"
//go:cgo_import_dynamic libc_select select "libc.so"
//go:cgo_import_dynamic libc_setegid setegid "libc.so"
//go:cgo_import_dynamic libc_seteuid seteuid "libc.so"
//go:cgo_import_dynamic libc_setgid setgid "libc.so"
//go:cgo_import_dynamic libc_sethostname sethostname "libc.so"
//go:cgo_import_dynamic libc_setpgid setpgid "libc.so"
//go:cgo_import_dynamic libc_setpriority setpriority "libc.so"
//go:cgo_import_dynamic libc_setregid setregid "libc.so"
//go:cgo_import_dynamic libc_setreuid setreuid "libc.so"
//go:cgo_import_dynamic libc_setrlimit setrlimit "libc.so"
//go:cgo_import_dynamic libc_setsid setsid "libc.so"
//go:cgo_import_dynamic libc_setuid setuid "libc.so"
//go:cgo_import_dynamic libc_shutdown shutdown "libsocket.so"
//go:cgo_import_dynamic libc_stat stat "libc.so"
//go:cgo_import_dynamic libc_statvfs statvfs "libc.so"
//go:cgo_import_dynamic libc_symlink symlink "libc.so"
//go:cgo_import_dynamic libc_sync sync "libc.so"
//go:cgo_import_dynamic libc_times times "libc.so"
//go:cgo_import_dynamic libc_truncate truncate "libc.so"
//go:cgo_import_dynamic libc_fsync fsync "libc.so"
//go:cgo_import_dynamic libc_ftruncate ftruncate "libc.so"
//go:cgo_import_dynamic libc_umask umask "libc.so"
//go:cgo_import_dynamic libc_uname uname "libc.so"
//go:cgo_import_dynamic libc_umount umount "libc.so"
//go:cgo_import_dynamic libc_unlink unlink "libc.so"
//go:cgo_import_dynamic libc_unlinkat unlinkat "libc.so"
//go:cgo_import_dynamic libc_ustat ustat "libc.so"
//go:cgo_import_dynamic libc_utime utime "libc.so"
//go:cgo_import_dynamic libc___xnet_bind __xnet_bind "libsocket.so"
//go:cgo_import_dynamic libc___xnet_connect __xnet_connect "libsocket.so"
//go:cgo_import_dynamic libc_mmap mmap "libc.so"
//go:cgo_import_dynamic libc_munmap munmap "libc.so"
//go:cgo_import_dynamic libc_sendfile sendfile "libsendfile.so"
//go:cgo_import_dynamic libc___xnet_sendto __xnet_sendto "libsocket.so"
//go:cgo_import_dynamic libc___xnet_socket __xnet_socket "libsocket.so"
//go:cgo_import_dynamic libc___xnet_socketpair __xnet_socketpair "libsocket.so"
//go:cgo_import_dynamic libc_write write "libc.so"
//go:cgo_import_dynamic libc___xnet_getsockopt __xnet_getsockopt "libsocket.so"
//go:cgo_import_dynamic libc_getpeername getpeername "libsocket.so"
//go:cgo_import_dynamic libc_setsockopt setsockopt "libsocket.so"
//go:cgo_import_dynamic libc_recvfrom recvfrom "libsocket.so"

//go:linkname procpipe libc_pipe
//go:linkname procgetsockname libc_getsockname
//go:linkname procgetcwd libc_getcwd
//go:linkname procgetgroups libc_getgroups
//go:linkname procsetgroups libc_setgroups
//go:linkname procwait4 libc_wait4
//go:linkname procgethostname libc_gethostname
//go:linkname procutimes libc_utimes
//go:linkname procutimensat libc_utimensat
//go:linkname procfcntl libc_fcntl
//go:linkname procfutimesat libc_futimesat
//go:linkname procaccept libc_accept
//go:linkname proc__xnet_recvmsg libc___xnet_recvmsg
//go:linkname proc__xnet_sendmsg libc___xnet_sendmsg
//go:linkname procacct libc_acct
//go:linkname proc__makedev libc___makedev
//go:linkname proc__major libc___major
//go:linkname proc__minor libc___minor
//go:linkname procioctl libc_ioctl
//go:linkname procpoll libc_poll
//go:linkname procaccess libc_access
//go:linkname procadjtime libc_adjtime
//go:linkname procchdir libc_chdir
//go:linkname procchmod libc_chmod
//go:linkname procchown libc_chown
//go:linkname procchroot libc_chroot
//go:linkname procclose libc_close
//go:linkname proccreat libc_creat
//go:linkname procdup libc_dup
//go:linkname procdup2 libc_dup2
//go:linkname procexit libc_exit
//go:linkname procfaccessat libc_faccessat
//go:linkname procfchdir libc_fchdir
//go:linkname procfchmod libc_fchmod
//go:linkname procfchmodat libc_fchmodat
//go:linkname procfchown libc_fchown
//go:linkname procfchownat libc_fchownat
//go:linkname procfdatasync libc_fdatasync
//go:linkname procflock libc_flock
//go:linkname procfpathconf libc_fpathconf
//go:linkname procfstat libc_fstat
//go:linkname procfstatat libc_fstatat
//go:linkname procfstatvfs libc_fstatvfs
//go:linkname procgetdents libc_getdents
//go:linkname procgetgid libc_getgid
//go:linkname procgetpid libc_getpid
//go:linkname procgetpgid libc_getpgid
//go:linkname procgetpgrp libc_getpgrp
//go:linkname procgeteuid libc_geteuid
//go:linkname procgetegid libc_getegid
//go:linkname procgetppid libc_getppid
//go:linkname procgetpriority libc_getpriority
//go:linkname procgetrlimit libc_getrlimit
//go:linkname procgetrusage libc_getrusage
//go:linkname procgettimeofday libc_gettimeofday
//go:linkname procgetuid libc_getuid
//go:linkname prockill libc_kill
//go:linkname proclchown libc_lchown
//go:linkname proclink libc_link
//go:linkname proc__xnet_llisten libc___xnet_llisten
//go:linkname proclstat libc_lstat
//go:linkname procmadvise libc_madvise
//go:linkname procmkdir libc_mkdir
//go:linkname procmkdirat libc_mkdirat
//go:linkname procmkfifo libc_mkfifo
//go:linkname procmkfifoat libc_mkfifoat
//go:linkname procmknod libc_mknod
//go:linkname procmknodat libc_mknodat
//go:linkname procmlock libc_mlock
//go:linkname procmlockall libc_mlockall
//go:linkname procmprotect libc_mprotect
//go:linkname procmsync libc_msync
//go:linkname procmunlock libc_munlock
//go:linkname procmunlockall libc_munlockall
//go:linkname procnanosleep libc_nanosleep
//go:linkname procopen libc_open
//go:linkname procopenat libc_openat
//go:linkname procpathconf libc_pathconf
//go:linkname procpause libc_pause
//go:linkname procpread libc_pread
//go:linkname procpwrite libc_pwrite
//go:linkname procread libc_read
//go:linkname procreadlink libc_readlink
//go:linkname procrename libc_rename
//go:linkname procrenameat libc_renameat
//go:linkname procrmdir libc_rmdir
//go:linkname proclseek libc_lseek
//go:linkname procselect libc_select
//go:linkname procsetegid libc_setegid
//go:linkname procseteuid libc_seteuid
//go:linkname procsetgid libc_setgid
//go:linkname procsethostname libc_sethostname
//go:linkname procsetpgid libc_setpgid
//go:linkname procsetpriority libc_setpriority
//go:linkname procsetregid libc_setregid
//go:linkname procsetreuid libc_setreuid
//go:linkname procsetrlimit libc_setrlimit
//go:linkname procsetsid libc_setsid
//go:linkname procsetuid libc_setuid
//go:linkname procshutdown libc_shutdown
//go:linkname procstat libc_stat
//go:linkname procstatvfs libc_statvfs
//go:linkname procsymlink libc_symlink
//go:linkname procsync libc_sync
//go:linkname proctimes libc_times
//go:linkname proctruncate libc_truncate
//go:linkname procfsync libc_fsync
//go:linkname procftruncate libc_ftruncate
//go:linkname procumask libc_umask
//go:linkname procuname libc_uname
//go:linkname procumount libc_umount
//go:linkname procunlink libc_unlink
//go:linkname procunlinkat libc_unlinkat
//go:linkname procustat libc_ustat
//go:linkname procutime libc_utime
//go:linkname proc__xnet_bind libc___xnet_bind
//go:linkname proc__xnet_connect libc___xnet_connect
//go:linkname procmmap libc_mmap
//go:linkname procmunmap libc_munmap
//go:linkname procsendfile libc_sendfile
//go:linkname proc__xnet_sendto libc___xnet_sendto
//go:linkname proc__xnet_socket libc___xnet_socket
//go:linkname proc__xnet_socketpair libc___xnet_socketpair
//go:linkname procwrite libc_write
//go:linkname proc__xnet_getsockopt libc___xnet_getsockopt
//go:linkname procgetpeername libc_getpeername
//go:linkname procsetsockopt libc_setsockopt
//go:linkname procrecvfrom libc_recvfrom

type syscallFunc uintptr

var (
	procpipe,
	procgetsockname,
	procgetcwd,
	procgetgroups,
	procsetgroups,
	procwait4,
	procgethostname,
	procutimes,
	procutimensat,
	procfcntl,
	procfutimesat,
	procaccept,
	proc__xnet_recvmsg,
	proc__xnet_sendmsg,
	procacct,
	proc__makedev,
	proc__major,
	proc__minor,
	procioctl,
	procpoll,
	procaccess,
	procadjtime,
	procchdir,
	procchmod,
	procchown,
	procchroot,
	procclose,
	proccreat,
	procdup,
	procdup2,
	procexit,
	procfaccessat,
	procfchdir,
	procfchmod,
	procfchmodat,
	procfchown,
	procfchownat,
	procfdatasync,
	procflock,
	procfpathconf,
	procfstat,
	procfstatat,
	procfstatvfs,
	procgetdents,
	procgetgid,
	procgetpid,
	procgetpgid,
	procgetpgrp,
	procgeteuid,
	procgetegid,
	procgetppid,
	procgetpriority,
	procgetrlimit,
	procgetrusage,
	procgettimeofday,
	procgetuid,
	prockill,
	proclchown,
	proclink,
	proc__xnet_llisten,
	proclstat,
	procmadvise,
	procmkdir,
	procmkdirat,
	procmkfifo,
	procmkfifoat,
	procmknod,
	procmknodat,
	procmlock,
	procmlockall,
	procmprotect,
	procmsync,
	procmunlock,
	procmunlockall,
	procnanosleep,
	procopen,
	procopenat,
	procpathconf,
	procpause,
	procpread,
	procpwrite,
	procread,
	procreadlink,
	procrename,
	procrenameat,
	procrmdir,
	proclseek,
	procselect,
	procsetegid,
	procseteuid,
	procsetgid,
	procsethostname,
	procsetpgid,
	procsetpriority,
	procsetregid,
	procsetreuid,
	procsetrlimit,
	procsetsid,
	procsetuid,
	procshutdown,
	procstat,
	procstatvfs,
	procsymlink,
	procsync,
	proctimes,
	proctruncate,
	procfsync,
	procftruncate,
	procumask,
	procuname,
	procumount,
	procunlink,
	procunlinkat,
	procustat,
	procutime,
	proc__xnet_bind,
	proc__xnet_connect,
	procmmap,
	procmunmap,
	procsendfile,
	proc__xnet_sendto,
	proc__xnet_socket,
	proc__xnet_socketpair,
	procwrite,
	proc__xnet_getsockopt,
	procgetpeername,
	procsetsockopt,
	procrecvfrom syscallFunc
)

// Implemented in runtime/syscall_solaris.go.
func rawSyscall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)
func syscall6(trap, nargs, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)

// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callpipe(p uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procpipe)), 1, p, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetsockname(fd int, rsa uintptr, addrlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgetsockname)), 3, uintptr(fd), rsa, addrlen, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetcwd(_p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgetcwd)), 2, _p0, uintptr(_lenp0), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetgroups(ngid int, gid uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetgroups)), 2, uintptr(ngid), gid, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetgroups(ngid int, gid uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetgroups)), 2, uintptr(ngid), gid, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callwait4(pid int32, statusp uintptr, options int, rusage uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procwait4)), 4, uintptr(pid), statusp, uintptr(options), rusage, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgethostname(_p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgethostname)), 2, _p0, uintptr(_lenp0), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callutimes(_p0 uintptr, times uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procutimes)), 2, _p0, times, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callutimensat(fd int, _p0 uintptr, times uintptr, flag int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procutimensat)), 4, uintptr(fd), _p0, times, uintptr(flag), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfcntl(fd uintptr, cmd int, arg uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfcntl)), 3, fd, uintptr(cmd), arg, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfutimesat(fildes int, path uintptr, times uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfutimesat)), 3, uintptr(fildes), path, times, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callaccept(s int, rsa uintptr, addrlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procaccept)), 3, uintptr(s), rsa, addrlen, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_recvmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_recvmsg)), 3, uintptr(s), msg, uintptr(flags), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_sendmsg(s int, msg uintptr, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_sendmsg)), 3, uintptr(s), msg, uintptr(flags), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callacct(path uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procacct)), 1, path, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__makedev(version int, major int, minor int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__makedev)), 3, uintptr(version), uintptr(major), uintptr(minor), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__major(version int, dev uint64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__major)), 2, uintptr(version), uintptr(dev), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__minor(version int, dev uint64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__minor)), 2, uintptr(version), uintptr(dev), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callioctl(fd int, req int, arg uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procioctl)), 3, uintptr(fd), uintptr(req), arg, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callpoll(fds uintptr, nfds int, timeout int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procpoll)), 3, fds, uintptr(nfds), uintptr(timeout), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callaccess(_p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procaccess)), 2, _p0, uintptr(mode), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calladjtime(delta uintptr, olddelta uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procadjtime)), 2, delta, olddelta, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callchdir(_p0 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procchdir)), 1, _p0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callchmod(_p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procchmod)), 2, _p0, uintptr(mode), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callchown(_p0 uintptr, uid int, gid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procchown)), 3, _p0, uintptr(uid), uintptr(gid), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callchroot(_p0 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procchroot)), 1, _p0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callclose(fd int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procclose)), 1, uintptr(fd), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callcreat(_p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proccreat)), 2, _p0, uintptr(mode), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calldup(fd int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procdup)), 1, uintptr(fd), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calldup2(oldfd int, newfd int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procdup2)), 2, uintptr(oldfd), uintptr(newfd), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callexit(code int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procexit)), 1, uintptr(code), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfaccessat(dirfd int, _p0 uintptr, mode uint32, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfaccessat)), 4, uintptr(dirfd), _p0, uintptr(mode), uintptr(flags), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfchdir(fd int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfchdir)), 1, uintptr(fd), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfchmod(fd int, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfchmod)), 2, uintptr(fd), uintptr(mode), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfchmodat(dirfd int, _p0 uintptr, mode uint32, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfchmodat)), 4, uintptr(dirfd), _p0, uintptr(mode), uintptr(flags), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfchown(fd int, uid int, gid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfchown)), 3, uintptr(fd), uintptr(uid), uintptr(gid), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfchownat(dirfd int, _p0 uintptr, uid int, gid int, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfchownat)), 5, uintptr(dirfd), _p0, uintptr(uid), uintptr(gid), uintptr(flags), 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfdatasync(fd int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfdatasync)), 1, uintptr(fd), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callflock(fd int, how int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procflock)), 2, uintptr(fd), uintptr(how), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfpathconf(fd int, name int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfpathconf)), 2, uintptr(fd), uintptr(name), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfstat(fd int, stat uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfstat)), 2, uintptr(fd), stat, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfstatat(fd int, _p0 uintptr, stat uintptr, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfstatat)), 4, uintptr(fd), _p0, stat, uintptr(flags), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfstatvfs(fd int, vfsstat uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfstatvfs)), 2, uintptr(fd), vfsstat, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetdents(fd int, _p0 uintptr, _lenp0 int, basep uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgetdents)), 4, uintptr(fd), _p0, uintptr(_lenp0), basep, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetgid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetgid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetpid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetpid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetpgid(pid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetpgid)), 1, uintptr(pid), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetpgrp() (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetpgrp)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgeteuid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgeteuid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetegid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgetegid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetppid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgetppid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetpriority(which int, who int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procgetpriority)), 2, uintptr(which), uintptr(who), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetrlimit(which int, lim uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetrlimit)), 2, uintptr(which), lim, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetrusage(who int, rusage uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetrusage)), 2, uintptr(who), rusage, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgettimeofday(tv uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgettimeofday)), 1, tv, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetuid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetuid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callkill(pid int, signum int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&prockill)), 2, uintptr(pid), uintptr(signum), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calllchown(_p0 uintptr, uid int, gid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proclchown)), 3, _p0, uintptr(uid), uintptr(gid), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calllink(_p0 uintptr, _p1 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proclink)), 2, _p0, _p1, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_llisten(s int, backlog int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_llisten)), 2, uintptr(s), uintptr(backlog), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calllstat(_p0 uintptr, stat uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proclstat)), 2, _p0, stat, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmadvise(_p0 uintptr, _lenp0 int, advice int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmadvise)), 3, _p0, uintptr(_lenp0), uintptr(advice), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmkdir(_p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmkdir)), 2, _p0, uintptr(mode), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmkdirat(dirfd int, _p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmkdirat)), 3, uintptr(dirfd), _p0, uintptr(mode), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmkfifo(_p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmkfifo)), 2, _p0, uintptr(mode), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmkfifoat(dirfd int, _p0 uintptr, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmkfifoat)), 3, uintptr(dirfd), _p0, uintptr(mode), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmknod(_p0 uintptr, mode uint32, dev int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmknod)), 3, _p0, uintptr(mode), uintptr(dev), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmknodat(dirfd int, _p0 uintptr, mode uint32, dev int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmknodat)), 4, uintptr(dirfd), _p0, uintptr(mode), uintptr(dev), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmlock(_p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmlock)), 2, _p0, uintptr(_lenp0), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmlockall(flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmlockall)), 1, uintptr(flags), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmprotect(_p0 uintptr, _lenp0 int, prot int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmprotect)), 3, _p0, uintptr(_lenp0), uintptr(prot), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmsync(_p0 uintptr, _lenp0 int, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmsync)), 3, _p0, uintptr(_lenp0), uintptr(flags), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmunlock(_p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmunlock)), 2, _p0, uintptr(_lenp0), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmunlockall() (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmunlockall)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callnanosleep(time uintptr, leftover uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procnanosleep)), 2, time, leftover, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callopen(_p0 uintptr, mode int, perm uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procopen)), 3, _p0, uintptr(mode), uintptr(perm), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callopenat(dirfd int, _p0 uintptr, flags int, mode uint32) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procopenat)), 4, uintptr(dirfd), _p0, uintptr(flags), uintptr(mode), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callpathconf(_p0 uintptr, name int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procpathconf)), 2, _p0, uintptr(name), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callpause() (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procpause)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callpread(fd int, _p0 uintptr, _lenp0 int, offset int64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procpread)), 4, uintptr(fd), _p0, uintptr(_lenp0), uintptr(offset), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callpwrite(fd int, _p0 uintptr, _lenp0 int, offset int64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procpwrite)), 4, uintptr(fd), _p0, uintptr(_lenp0), uintptr(offset), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callread(fd int, _p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procread)), 3, uintptr(fd), _p0, uintptr(_lenp0), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callreadlink(_p0 uintptr, _p1 uintptr, _lenp1 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procreadlink)), 3, _p0, _p1, uintptr(_lenp1), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callrename(_p0 uintptr, _p1 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procrename)), 2, _p0, _p1, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callrenameat(olddirfd int, _p0 uintptr, newdirfd int, _p1 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procrenameat)), 4, uintptr(olddirfd), _p0, uintptr(newdirfd), _p1, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callrmdir(_p0 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procrmdir)), 1, _p0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calllseek(fd int, offset int64, whence int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proclseek)), 3, uintptr(fd), uintptr(offset), uintptr(whence), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callselect(nfd int, r uintptr, w uintptr, e uintptr, timeout uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procselect)), 5, uintptr(nfd), r, w, e, timeout, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetegid(egid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetegid)), 1, uintptr(egid), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callseteuid(euid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procseteuid)), 1, uintptr(euid), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetgid(gid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetgid)), 1, uintptr(gid), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsethostname(_p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procsethostname)), 2, _p0, uintptr(_lenp0), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetpgid(pid int, pgid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetpgid)), 2, uintptr(pid), uintptr(pgid), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetpriority(which int, who int, prio int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procsetpriority)), 3, uintptr(which), uintptr(who), uintptr(prio), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetregid(rgid int, egid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetregid)), 2, uintptr(rgid), uintptr(egid), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetreuid(ruid int, euid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetreuid)), 2, uintptr(ruid), uintptr(euid), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetrlimit(which int, lim uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetrlimit)), 2, uintptr(which), lim, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetsid() (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetsid)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetuid(uid int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procsetuid)), 1, uintptr(uid), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callshutdown(s int, how int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procshutdown)), 2, uintptr(s), uintptr(how), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callstat(_p0 uintptr, stat uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procstat)), 2, _p0, stat, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callstatvfs(_p0 uintptr, vfsstat uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procstatvfs)), 2, _p0, vfsstat, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsymlink(_p0 uintptr, _p1 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procsymlink)), 2, _p0, _p1, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsync() (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procsync)), 0, 0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calltimes(tms uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&proctimes)), 1, tms, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calltruncate(_p0 uintptr, length int64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proctruncate)), 2, _p0, uintptr(length), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callfsync(fd int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procfsync)), 1, uintptr(fd), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callftruncate(fd int, length int64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procftruncate)), 2, uintptr(fd), uintptr(length), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callumask(mask int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procumask)), 1, uintptr(mask), 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func calluname(buf uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procuname)), 1, buf, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callumount(_p0 uintptr, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procumount)), 2, _p0, uintptr(flags), 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callunlink(_p0 uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procunlink)), 1, _p0, 0, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callunlinkat(dirfd int, _p0 uintptr, flags int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procunlinkat)), 3, uintptr(dirfd), _p0, uintptr(flags), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callustat(dev int, ubuf uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procustat)), 2, uintptr(dev), ubuf, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callutime(_p0 uintptr, buf uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procutime)), 2, _p0, buf, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_bind(s int, addr uintptr, addrlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_bind)), 3, uintptr(s), addr, addrlen, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_connect(s int, addr uintptr, addrlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_connect)), 3, uintptr(s), addr, addrlen, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmmap(addr uintptr, length uintptr, prot int, flag int, fd int, pos int64) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmmap)), 6, addr, length, uintptr(prot), uintptr(flag), uintptr(fd), uintptr(pos))
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callmunmap(addr uintptr, length uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procmunmap)), 2, addr, length, 0, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsendfile(outfd int, infd int, offset uintptr, count int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procsendfile)), 4, uintptr(outfd), uintptr(infd), offset, uintptr(count), 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_sendto(s int, _p0 uintptr, _lenp0 int, flags int, to uintptr, addrlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_sendto)), 6, uintptr(s), _p0, uintptr(_lenp0), uintptr(flags), to, addrlen)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_socket(domain int, typ int, proto int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_socket)), 3, uintptr(domain), uintptr(typ), uintptr(proto), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_socketpair(domain int, typ int, proto int, fd uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&proc__xnet_socketpair)), 4, uintptr(domain), uintptr(typ), uintptr(proto), fd, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callwrite(fd int, _p0 uintptr, _lenp0 int) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procwrite)), 3, uintptr(fd), _p0, uintptr(_lenp0), 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func call__xnet_getsockopt(s int, level int, name int, val uintptr, vallen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&proc__xnet_getsockopt)), 5, uintptr(s), uintptr(level), uintptr(name), val, vallen, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callgetpeername(fd int, rsa uintptr, addrlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = rawSysvicall6(uintptr(unsafe.Pointer(&procgetpeername)), 3, uintptr(fd), rsa, addrlen, 0, 0, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callsetsockopt(s int, level int, name int, val uintptr, vallen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procsetsockopt)), 5, uintptr(s), uintptr(level), uintptr(name), val, vallen, 0)
	return
}
// THIS FILE IS GENERATED BY THE COMMAND AT THE TOP; DO NOT EDIT

func callrecvfrom(fd int, _p0 uintptr, _lenp0 int, flags int, from uintptr, fromlen uintptr) (r1 uintptr, e1 Errno) {
	r1, _, e1 = sysvicall6(uintptr(unsafe.Pointer(&procrecvfrom)), 6, uintptr(fd), _p0, uintptr(_lenp0), uintptr(flags), from, fromlen)
	return
}

